name: Build Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.22

    - name: Download dependencies
      run: go mod download

    - name: Build binaries
      run: |
        GOOS=linux GOARCH=amd64 go build -o binary-linux-amd64
        GOOS=linux GOARCH=arm64 go build -o binary-linux-arm64
        GOOS=windows GOARCH=amd64 go build -o binary-windows-amd64.exe
        GOOS=darwin GOARCH=amd64 go build -o binary-darwin-amd64
        GOOS=darwin GOARCH=arm64 go build -o binary-darwin-arm64

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./binary-*
        asset_name: binary-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}
        asset_content_type: application/octet-stream